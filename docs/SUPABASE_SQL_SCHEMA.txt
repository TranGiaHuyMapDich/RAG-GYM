-- ╔════════════════════════════════════════════════════════════════╗
-- ║           SUPABASE DATABASE SCHEMA - GYM RAG AI                ║
-- ║              Copy toàn bộ code này vào SQL Editor              ║
-- ╚════════════════════════════════════════════════════════════════╝

-- ===================================================================
-- TABLE: users - Quản lý người dùng
-- ===================================================================

CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    email VARCHAR(255) UNIQUE NOT NULL,
    full_name VARCHAR(255),
    body_type VARCHAR(50), -- ectomorph, mesomorph, endomorph
    fitness_level VARCHAR(50), -- Beginner, Intermediate, Advanced
    primary_goal VARCHAR(100), -- muscle_gain, weight_loss, endurance, general_fitness
    age INTEGER,
    height DECIMAL(5,2), -- cm
    weight DECIMAL(5,2), -- kg
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    last_login TIMESTAMP WITH TIME ZONE
);

-- ===================================================================
-- TABLE: workout_plans - Kế hoạch tập luyện
-- ===================================================================

CREATE TABLE workout_plans (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID REFERENCES users(id) ON DELETE CASCADE,
    plan_name VARCHAR(255) NOT NULL,
    description TEXT,
    body_type VARCHAR(50),
    fitness_level VARCHAR(50),
    goals TEXT[],
    days_per_week INTEGER DEFAULT 3,
    plan_data JSONB, -- Chứa toàn bộ workout plan chi tiết
    is_active BOOLEAN DEFAULT true,
    is_favorite BOOLEAN DEFAULT false,
    times_completed INTEGER DEFAULT 0,
    last_completed TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ===================================================================
-- TABLE: favorite_exercises - Bài tập yêu thích
-- ===================================================================

CREATE TABLE favorite_exercises (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID REFERENCES users(id) ON DELETE CASCADE,
    exercise_id VARCHAR(255), -- ID từ dataset
    exercise_title VARCHAR(255),
    exercise_data JSONB, -- Chi tiết bài tập
    personal_notes TEXT,
    times_performed INTEGER DEFAULT 0,
    last_performed TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ===================================================================
-- TABLE: chat_history - Lịch sử chat
-- ===================================================================

CREATE TABLE chat_history (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID REFERENCES users(id) ON DELETE CASCADE,
    session_id UUID,
    user_message TEXT NOT NULL,
    ai_response TEXT NOT NULL,
    exercises_suggested JSONB, -- Danh sách bài tập được gợi ý
    context_used TEXT, -- Context từ RAG
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ===================================================================
-- TABLE: progress_tracking - Theo dõi tiến độ
-- ===================================================================

CREATE TABLE progress_tracking (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID REFERENCES users(id) ON DELETE CASCADE,
    measurement_date DATE NOT NULL,
    weight DECIMAL(5,2), -- kg
    body_fat_percentage DECIMAL(4,2),
    muscle_mass DECIMAL(5,2),
    chest_size DECIMAL(5,2), -- cm
    waist_size DECIMAL(5,2),
    hip_size DECIMAL(5,2),
    arm_size DECIMAL(5,2),
    thigh_size DECIMAL(5,2),
    notes TEXT,
    photos JSONB, -- URLs to progress photos
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ===================================================================
-- TABLE: workout_sessions - Buổi tập thực tế
-- ===================================================================

CREATE TABLE workout_sessions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID REFERENCES users(id) ON DELETE CASCADE,
    workout_plan_id UUID REFERENCES workout_plans(id) ON DELETE SET NULL,
    session_date DATE NOT NULL,
    duration_minutes INTEGER,
    exercises_completed JSONB, -- Chi tiết các bài tập đã làm
    difficulty_rating INTEGER CHECK (difficulty_rating >= 1 AND difficulty_rating <= 5),
    satisfaction_rating INTEGER CHECK (satisfaction_rating >= 1 AND satisfaction_rating <= 5),
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ===================================================================
-- TABLE: user_settings - Cài đặt người dùng
-- ===================================================================

CREATE TABLE user_settings (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID UNIQUE REFERENCES users(id) ON DELETE CASCADE,
    preferred_language VARCHAR(10) DEFAULT 'vi',
    theme VARCHAR(20) DEFAULT 'dark',
    email_notifications BOOLEAN DEFAULT true,
    workout_reminders BOOLEAN DEFAULT true,
    reminder_time TIME,
    weight_unit VARCHAR(10) DEFAULT 'kg',
    height_unit VARCHAR(10) DEFAULT 'cm',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ===================================================================
-- INDEXES - Tối ưu hóa truy vấn
-- ===================================================================

CREATE INDEX idx_workout_plans_user_id ON workout_plans(user_id);
CREATE INDEX idx_workout_plans_is_active ON workout_plans(is_active);
CREATE INDEX idx_favorite_exercises_user_id ON favorite_exercises(user_id);
CREATE INDEX idx_chat_history_user_id ON chat_history(user_id);
CREATE INDEX idx_chat_history_session_id ON chat_history(session_id);
CREATE INDEX idx_progress_tracking_user_id ON progress_tracking(user_id);
CREATE INDEX idx_progress_tracking_date ON progress_tracking(measurement_date);
CREATE INDEX idx_workout_sessions_user_id ON workout_sessions(user_id);
CREATE INDEX idx_workout_sessions_date ON workout_sessions(session_date);

-- ===================================================================
-- ROW LEVEL SECURITY (RLS) - Bảo mật dữ liệu
-- ===================================================================

-- Enable RLS on all tables
ALTER TABLE users ENABLE ROW LEVEL SECURITY;
ALTER TABLE workout_plans ENABLE ROW LEVEL SECURITY;
ALTER TABLE favorite_exercises ENABLE ROW LEVEL SECURITY;
ALTER TABLE chat_history ENABLE ROW LEVEL SECURITY;
ALTER TABLE progress_tracking ENABLE ROW LEVEL SECURITY;
ALTER TABLE workout_sessions ENABLE ROW LEVEL SECURITY;
ALTER TABLE user_settings ENABLE ROW LEVEL SECURITY;

-- Policies: Users can only see and modify their own data

-- Users table
CREATE POLICY "Users can view own data" ON users
    FOR SELECT USING (true);  -- Public read for now (can be restricted later)

CREATE POLICY "Users can update own data" ON users
    FOR UPDATE USING (true);

CREATE POLICY "Users can insert own data" ON users
    FOR INSERT WITH CHECK (true);

-- Workout plans
CREATE POLICY "Users can view own workout plans" ON workout_plans
    FOR SELECT USING (true);

CREATE POLICY "Users can create own workout plans" ON workout_plans
    FOR INSERT WITH CHECK (true);

CREATE POLICY "Users can update own workout plans" ON workout_plans
    FOR UPDATE USING (true);

CREATE POLICY "Users can delete own workout plans" ON workout_plans
    FOR DELETE USING (true);

-- Favorite exercises
CREATE POLICY "Users can view own favorites" ON favorite_exercises
    FOR SELECT USING (true);

CREATE POLICY "Users can create own favorites" ON favorite_exercises
    FOR INSERT WITH CHECK (true);

CREATE POLICY "Users can delete own favorites" ON favorite_exercises
    FOR DELETE USING (true);

-- Chat history
CREATE POLICY "Users can view own chat history" ON chat_history
    FOR SELECT USING (true);

CREATE POLICY "Users can create own chat history" ON chat_history
    FOR INSERT WITH CHECK (true);

-- Progress tracking
CREATE POLICY "Users can view own progress" ON progress_tracking
    FOR SELECT USING (true);

CREATE POLICY "Users can create own progress" ON progress_tracking
    FOR INSERT WITH CHECK (true);

CREATE POLICY "Users can update own progress" ON progress_tracking
    FOR UPDATE USING (true);

-- Workout sessions
CREATE POLICY "Users can view own sessions" ON workout_sessions
    FOR SELECT USING (true);

CREATE POLICY "Users can create own sessions" ON workout_sessions
    FOR INSERT WITH CHECK (true);

CREATE POLICY "Users can update own sessions" ON workout_sessions
    FOR UPDATE USING (true);

-- User settings
CREATE POLICY "Users can view own settings" ON user_settings
    FOR SELECT USING (true);

CREATE POLICY "Users can create own settings" ON user_settings
    FOR INSERT WITH CHECK (true);

CREATE POLICY "Users can update own settings" ON user_settings
    FOR UPDATE USING (true);

-- ===================================================================
-- FUNCTIONS - Hàm hỗ trợ
-- ===================================================================

-- Auto update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Triggers for auto-updating updated_at
CREATE TRIGGER update_users_updated_at BEFORE UPDATE ON users
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_workout_plans_updated_at BEFORE UPDATE ON workout_plans
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_user_settings_updated_at BEFORE UPDATE ON user_settings
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- ===================================================================
-- ✅ DONE! All tables, indexes, and security policies created!
-- ===================================================================

